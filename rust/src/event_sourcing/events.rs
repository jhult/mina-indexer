use super::payloads::{
    ActorHeightPayload, BerkeleyBlockPayload, BlockAncestorPayload, BlockCanonicityUpdatePayload, BlockConfirmationPayload, BlockLogPayload,
    CanonicalBlockLogPayload, CanonicalInternalCommandLogPayload, CanonicalUserCommandLogPayload, DoubleEntryRecordPayload, GenesisBlockPayload,
    InternalCommandLogPayload, MainnetBlockPayload, NewAccountPayload, NewBlockPayload, SnarkCanonicitySummaryPayload, SnarkWorkSummaryPayload,
    StakingLedgerEntryPayload, UserCommandLogPayload,
};

#[derive(Clone, Debug, Eq, PartialEq)]
pub(crate) enum Event {
    GenesisBlock(GenesisBlockPayload),
    PrecomputedBlockPath(String),
    BerkeleyBlockPath(String),
    MainnetBlockPath(String),
    BlockAncestor(BlockAncestorPayload),
    BerkeleyBlock(BerkeleyBlockPayload),
    MainnetBlock(MainnetBlockPayload),
    NewBlock(NewBlockPayload),
    BlockCanonicityUpdate(BlockCanonicityUpdatePayload),
    BestBlock(BlockCanonicityUpdatePayload),
    BlockLog(BlockLogPayload),
    CanonicalBlockLog(CanonicalBlockLogPayload),
    SnarkWorkSummary(SnarkWorkSummaryPayload),
    SnarkCanonicitySummary(SnarkCanonicitySummaryPayload),
    TransitionFrontier(u64),
    UserCommandLog(UserCommandLogPayload),
    CanonicalUserCommandLog(CanonicalUserCommandLogPayload),
    InternalCommandLog(InternalCommandLogPayload),
    CanonicalInternalCommandLog(CanonicalInternalCommandLogPayload),
    DoubleEntryTransaction(DoubleEntryRecordPayload),
    NewAccount(NewAccountPayload),
    BlockConfirmation(BlockConfirmationPayload),
    PreExistingAccount(String),
    ActorHeight(ActorHeightPayload),
    EpochStakeDelegation,
    HeightSpread,
    StakingLedgerFilePath(String),
    StakingLedgerEntry(StakingLedgerEntryPayload),
}
